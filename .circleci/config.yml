version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@5.0.2
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/node:16.0"
    steps:
      # install node and checkout code
      - node/install:
          node-version: "16.0"
      - checkout
      - aws-cli/setup
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install AWS EB
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python-dev build-essential
            sudo pip install --upgrade setuptools
            sudo pip install awsebcli --upgrade
      - run:
          name: Install Front-End Dependencies
          command: |
            echo "NODE --version" 
            echo $(node --version)
            echo "NPM --version" 
            echo $(npm --version)
            npm run frontend:install
      # TODO: Install dependencies in the the backend API
      - run:
          name: Install API Dependencies
          command: |
            echo "TODO: Install dependencies in the the backend API  "
            npm run api:install
      # TODO: Build the frontend app
      - run:
          name: Front-End Build
          command: |
            echo "TODO: Build the frontend app"
            npm run frontend:build

      # TODO: deploy the backend app
      - run:
          name: Back-End Build
          command: |
            echo "TODO: Build the Backend app"
            npm run api:build
      # TODO: deploy the frontend app
      - run:
          name: Front-End deploy
          command: |
            echo "TODO: Build the frontend app"
            npm run frontend:deploy
      # TODO: deploy the backend app
      - run:
          name: backend deploy
          command: |
            echo "TODO: Build the backend app"
            cd udagram/udagram-api
            eb init udagram-api --region us-east-1
            eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_HOST=$POSTGRES_HOST POSTGRES_DB=$POSTGRES_DB  JWT_SECRET=$JWT_SECRET ENV=$ENV DB_PORT=$DB_PORT AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY AWS_BUCKET=$AWS_BUCKET AWS_REGION=$AWS_REGION 
            eb use udagram-api-dev
            eb deploy udagram-api-dev

workflows:
  udagram:
    jobs:
      - build

